<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0097)http://moodle.up.pt/pluginfile.php/33505/mod_resource/content/16/Trab1_enunciado/EnunciadoT1.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <!-- saved from url=(0105)https://moodle.fe.up.pt/1213/pluginfile.php/14287/mod_resource/content/7/Trab1_enunciado/EnunciadoT1.html
        -->
    <title>Trabalho 1 – Motor Gráfico</title>
  </head>
  <body style="color: rgb(0, 0, 0);" alink="#ee0000" link="#0000ee" vlink="#551a8b">
    <div style="text-align: center;"> <big> <big> <big style="font-weight: bold;"> Laboratório de Aplicações com
            Interface Gráfica </big> </big> </big> </div>
    <p style="text-align: center;"> <span style="font-weight: bold;">
        Aulas Práticas </span> <br>
      <br>
      &nbsp;MIEIC – 2013/2014 <br>
      <br>
      <big> <big> <span style="font-weight: bold;"> Trabalho 1 – Motor
            Gráfico OpenGL </span> </big> </big> </p>
    <h1> 1. Introdução </h1>
    <p> Pretende-se, com este trabalho, constituir uma aplicação dotada
      de um pequeno motor gráfico 3D. A aplicação deve ser capaz de
      produzir imagens de qualquer cena, sendo esta especificada através
      de um ou mais ficheiros de texto a serem lidos pela aplicação (ver
      secção 3 deste documento). </p>
    <p> Os ficheiros de texto devem respeitar um formato próprio, a que
      chamaremos <span style="color: rgb(0, 0, 0);"> YASF - <span style="font-style: italic;"> Yet Another Scene Format </span>
        , </span> especificada na secção 3 deste documento, que obedece
      a um conceito muito vulgar em computação gráfica: o Grafo de Cena
      ( <span style="font-style: italic;"> Scene Graph </span> ). A
      sintaxe obedece ao formato de <em> tags </em> do XML. </p>
    <p> A aplicação deve efetuar a leitura de um ficheiro
      ".yaf"&nbsp;que descreve a cena, construindo simultaneamente a
      estrutura de dados correspondente ao grafo de cena. Só depois deve
      efetuar a afixação da imagem respetiva. A cena deve conter fontes
      de luz que devem ser ativadas ( <em> on/off </em> ) de acordo
      com o especificado no ficheiro .yaf, mas que podem posteriormente
      ver o seu estado alterado por meio de controlos numa régua
      inferior de comandos. Os pontos de vista de observação assim como
      o ponto de vista inicial devem ser especificados no ficheiro .yaf.
      O ponto de vista deve poder ser alterado por meio de um controlo
      na régua inferior de comandos. <br>
      Adicionalmente, na visualização da cena, deve ser possível
      alternar entre o modo poligonal " <span style="font-style:
        italic;"> fill </span> " e " <span style="font-style: italic;">
        wireframe </span> " através de um controlo localizado na régua
      inferior de comandos. </p>
    <p> <strong style="font-size: 14pt;"> Componentes do Trabalho: </strong>
    </p>
    <ol>
      <li> Preparar uma cena especificada em ficheiro .yaf original, de
        acordo com as instruções das secções seguintes do presente
        documento. Todos os ficheiros serão posteriormente divulgados e
        partilhados, constituindo-se assim um acervo de cenas de teste.
      </li>
      <li> Implementar a componente de leitura e interpretação dos
        ficheiros .yaf ( <em> parsing </em> ), por recurso à
        biblioteca TinyXML (instruções e dois exemplos serão
        disponibilizados), e integrada numa aplicação suportada pela
        biblioteca CGFlib (v1.6 ou superior). </li>
      <li> Implementar uma estrutura de dados com correspondências no
        grafo de cena apresentado na secção 2 deste documento. </li>
      <li> Implementar um conjunto de funcionalidades que efetue a
        visita do grafo anterior e construa a imagem correspondente
        usando a tecnologia OpenGL. </li>
      <li> Implementar um conjunto de funcionalidades, na régua inferior
        de comandos, que deem cumprimento ao anteriormente descrito para
        as fontes de luz, pontos de vista e visualização " <span style="font-style: italic;"> fill/wireframe </span> ". </li>
    </ol>
    <br>
    <span style="color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;;
      font-size: medium; font-style: normal; font-variant: normal;
      font-weight: normal; letter-spacing: normal; line-height: normal;
      text-align: start; text-indent: 0px; text-transform: none;
      white-space: normal; word-spacing: 0px; display: inline !
      important; float: none;">O trabalho deve ser desenvolvido de forma
      incremental, sugerindo-se os seguintes passos:<span class="Apple-converted-space"> <br>
      </span></span>
    <ol>
      <li><span style="color: rgb(0, 0, 0); font-family: &#39;Times New
          Roman&#39;; font-size: medium; font-style: normal; font-variant:
          normal; font-weight: normal; letter-spacing: normal;
          line-height: normal; text-align: start; text-indent: 0px;
          text-transform: none; white-space: normal; word-spacing: 0px;
          display: inline ! important; float: none;"><span class="Apple-converted-space">Versão inicial do parser,
            estrutura interna de dados e rotinas de visualização que
            permitam, respectivamente, ler, armazenar e visualizar
            algumas primitivas com transformações geométricas. Nesta
            fase poderão ser ignoradas as câmaras, as luzes, os
            materiais e as texturas.</span></span><span style="font-family: &#39;Times New Roman&#39;;"></span></li>
      <li><span style="font-family: &#39;Times New Roman&#39;;"></span>Versão
        progressivamente estendida do parser, estrutura e visualizador
        com as restantes funcionalidades.<br>
      </li>
    </ol>
    <span style="color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;;
      font-size: medium; font-style: normal; font-variant: normal;
      font-weight: normal; letter-spacing: normal; line-height: normal;
      orphans: auto; text-align: start; text-indent: 0px;
      text-transform: none; white-space: normal; widows: auto;
      word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline
      !important; float: none;"><span class="Apple-converted-space"></span></span>
    <br>
    <hr style="width: 100%; height: 2px;"> <span class="Apple-style-span" style="border-collapse: separate; color:
      rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;; font-style: normal;
      font-variant: normal; font-weight: normal; letter-spacing: normal;
      line-height: normal; orphans: 2; text-indent: 0px; text-transform:
      none; white-space: normal; widows: 2; word-spacing: 0px;
      font-size: medium;">
      <p> <strong style="font-size: 14pt;"> Notas sobre a avaliação do
          trabalho: </strong> </p>
    </span>
    <p> <span style="font-weight: bold;"> Composição dos Grupos </span>
      : Os trabalhos devem ser efetuados em grupos de dois estudantes.
      Em caso de impossibilidade (p.ex. por falta de paridade numa
      turma), deve ser discutida com o docente a melhor alternativa. </p>
    <span class="Apple-style-span" style="border-collapse: separate;
      color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;; font-style:
      normal; font-variant: normal; font-weight: normal; letter-spacing:
      normal; line-height: normal; orphans: 2; text-indent: 0px;
      text-transform: none; white-space: normal; widows: 2;
      word-spacing: 0px; font-size: medium;">
      <p> <span style="font-weight: bold;"> Avaliação do Trabalho de
          Grupo </span> : O código executável resultante do trabalho de
        grupo será sujeito a uma bateria de testes, com origem em várias
        cenas representadas por ficheiros .yaf, sendo a classificação
        atribuída dependente da adequação da resposta dada. </p>
      <p> <span class="Apple-style-span" style="border-collapse:
          separate; color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;;
          font-style: normal; font-variant: normal; font-weight: normal;
          letter-spacing: normal; line-height: normal; orphans: 2;
          text-indent: 0px; text-transform: none; white-space: normal;
          widows: 2; word-spacing: 0px; font-size: medium;"> <span style="font-weight: bold;"> Avaliação Individual </span> </span>
        : Na prova de avaliação individual, serão pedidas várias
        funcionalidades adicionais, a implementar sobre o código
        original desenvolvido em trabalho de grupo. Cada alínea será
        avaliada, à semelhança do trabalho de grupo, pelas respostas
        dadas pelo software a uma bateria de testes. </p>
      <p> <span class="Apple-style-span" style="border-collapse:
          separate; color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;;
          font-style: normal; font-variant: normal; font-weight: normal;
          letter-spacing: normal; line-height: normal; orphans: 2;
          text-indent: 0px; text-transform: none; white-space: normal;
          widows: 2; word-spacing: 0px; font-size: medium;"> <span class="Apple-style-span" style="border-collapse: separate;
            color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;;
            font-style: normal; font-variant: normal; font-weight:
            normal; letter-spacing: normal; line-height: normal;
            orphans: 2; text-indent: 0px; text-transform: none;
            white-space: normal; widows: 2; word-spacing: 0px;
            font-size: medium;"> <span style="font-weight: bold;">
              Avaliação do Trabalho </span> </span> : Média aritmética
          das duas avaliações anteriores. </span> </p>
      <p> De acordo com a formulação constante na ficha de disciplina, a
        avaliação deste trabalho conta para a classificação final com um
        peso de: </p>
      <div style="margin-left: 40px;"> 80% * 30% = 24%. <span style="color: red;"> </span> </div>
    </span>
    <hr> <strong style="font-size: 14pt;"> Entrega: </strong>
    <ul>
      <li> Data limite de entrega do ficheiro .yaf: 29/09/2013 <br>
      </li>
      <li> Data limite de entrega do trabalho completo: 13/10/2013 </li>
      <li> Por via eletrónica/moodle (instruções a divulgar
        proximamente). </li>
    </ul>
    <hr style="width: 100%; height: 2px;">
    <h1> 2. Grafo de Cena </h1>
    <p> Um grafo de cena é uma estrutura que especifica de forma
      hierárquica, como se de uma árvore se tratasse, uma cena 3D.
      &nbsp;Cada nó do grafo representa um <span style="font-weight:
        bold;"> Objeto </span> que é necessariamente&nbsp;composto
      por&nbsp; <strong> Primitivas </strong> e/ou por <span style="font-weight: bold;"> Descendentes </span> : </p>
    <ul>
      <li> <span style="font-weight: bold;"> Primitiva </span> :
        corresponde a uma folha da árvore e descreve um objeto
        geométrico (polígono, retângulo, cilindro...) diretamente
        endereçável em OpenGL ou nas bibliotecas associadas. </li>
      <li> <span style="font-weight: bold;"> Descendente: </span>
        ligação para um&nbsp;objeto-filho que, nesse caso, recebe por
        herança, algumas propriedades. </li>
    </ul>
    Um nó pode ser&nbsp;dotado de propriedades de aspeto (materiais,
    texturas, etc.) ou outras, assim como de&nbsp;um conjunto de
    transformações geométricas. Em ambos os casos aplicam-se regras de
    herança: <br>
    <ul>
      <li> Um nó recebe do seu antecessor um conjunto de propriedades de
        aspeto que funcionam para si próprio como valores por omissão (
        <span style="font-style: italic;"> default values </span> ). O
        nó pode no entanto redefinir alguns desses valores, prevalecendo
        o novo valor, quer para si próprio, quer para os seus
        descendentes se os tiver. No nó raiz, os valores por omissão são
        os definidos pela própria aplicação. </li>
      <li> Um nó também recebe do seu antecessor uma matriz de
        transformações geométricas <span style="font-weight: bold;
          font-style: italic;"> Ma </span> . Por outro lado, pode
        possuir as suas próprias transformações geométricas,
        representadas por uma matriz única <span style="font-weight:
          bold; font-style: italic;"> Mp </span> . A matriz a aplicar
        ao objeto, assim como a passar aos seus eventuais descendentes,
        é calculada pela expressão <span style="font-weight: bold;
          font-style: italic;"> M=Ma*Mp </span> . </li>
    </ul>
    <p> Todo e qualquer nó deve ter um identificador alfanumérico único
      e pode ser referenciado por mais do que um nó ascendente. Por
      exemplo, um nó pode representar a roda de um automóvel e, por
      isso, ser referenciado quatro vezes diferentes. </p>
    <p style="color: rgb(0, 0, 0);"> Qualquer nó pode ser referenciado
      previamente à sua declaração, isto é, a ordem pela qual os nós são
      declarados é irrelevante. </p>
    <p> Dado que afetam todos os objetos em cena, as fontes de luz e
      outras questões relacionadas com iluminação e visualização
      interferem com todo o grafo e, por isso, supõem-se ligadas à sua
      raiz. </p>
    <p> A figura 1 apresenta um exemplo de um grafo de cena. Os círculos
      (nós intermédios) representam objetos&nbsp;compostos por
      primitivas e/ou outros objetos e os quadrados (nós folha)
      representam objetos compostos exclusivamente por primitivas. </p>
    <br>
    <p style="text-align: center;"> <font color="#0000e0"> <img src="./Trabalho 1 – Motor Gráfico_files/figure1.png" style=" width: 923px; height: 438px;" alt="Grafo de Cena"> </font> </p>
    <p style="text-align: center;"> Figura 1 - Exemplo de um grafo de
      cena </p>
    <p> Note-se que o número de descendentes diretos de um nó é
      indeterminado. O caso de um nó intermédio com um só descendente
      destina-se, entre outras funções, a fazer uma instanciação.
      Veja-se por exemplo o caso da figura 1: o objeto <span style="font-weight: bold;"> "R" (Roda) </span> tem a sua
      subárvore (não representada para não sobrecarregar o desenho) e
      tem as suas transformações geométricas particulares. No entanto,
      para que as quatro rodas tenham distintas posições no espaço, é
      necessário que possuam diferentes transformações geométricas.
      Assim, são criados os nós intermédios de instanciação <span style="font-weight: bold;"> "RFE" </span> , <span style="font-weight: bold;"> "RFD" </span> , <span style="font-weight: bold;"> "RTE" </span> e <span style="font-weight: bold;"> "RTD" </span> ; os quatro referem o
      nó <span style="font-weight: bold;"> "R" </span> mas possuem
      transformações geométricas diferentes. </p>
    <h1> 3. Linguagem YASF </h1>
    <p> A linguagem <span style="font-style: italic;"> YASF </span>
      constitui uma forma de especificar cenas 3D de uma forma muito
      simples e fácil de interpretar. Um documento em linguagem YASF
      pode ser escrito em qualquer editor de texto e obedece a regras de
      XML, baseadas em <em> tags </em> . <br>
      Ao ser lido e interpretado por uma aplicação gráfica, um ficheiro
      em linguagem YASF deve ser verificado em termos de sintaxe,
      devendo a aplicação gerar mensagens de erro ou
      avisos,&nbsp;identificando eventuais erros encontrados ou
      situações anómalas ou indesejáveis. </p>
    <p> Cada comando representa-se por uma ou mais <em> tags </em> ,
      contendo os parâmetros respetivos (se existirem). Um grupo de
      caracteres, ou mesmo linhas, envolvido pelos delimitadores <span style="font-family: Courier New,Courier,monospace;"> <span style="font-size: 10pt;"> "&lt;!-- </span> </span> " e " <span style="font-family: Courier New,Courier,monospace; font-size:
        10pt;"> --&gt; </span> " é considerado um comentário. O texto
      de comentário deve ser ladeado por espaços que o separam dos
      dois&nbsp;delimitadores. <br>
      <span style="font-weight: bold;"> NOTA: </span> Todos os
      identificadores (de tags, atributos...) devem ser escritos
      exclusivamente com <span style="font-weight: bold;"> </span>
      letras minúsculas. <br>
      <br>
    </p>
    <br>
    Um documento YASF divide-se em blocos, cada um iniciando-se com um
    termo identificador de bloco, implementado em XML na forma de uma <span style="font-style: italic;"> tag </span> . A referência a uma <span style="font-style: italic;"> tag </span> inicia-se com um
    identificador alfanumérico entre os dois caracteres " <span style="font-family: monospace; font-size: 10pt;"> &lt; &gt; </span>
    " (por exemplo <span style="font-family: monospace; font-size:
      10pt;"> &lt;lighting&gt; </span> ) e terminando com o mesmo
    identificador antecedido de uma barra de divisão (no mesmo exemplo,
    <span style="font-family: monospace; font-size: 10pt;">
      &lt;/lighting&gt; </span> ); entre as duas ocorrências,
    descreve-se o conteúdo do <span style="font-style: italic;"> tag </span>
    .&nbsp;A sequência de blocos principais é a seguinte: <br>
    <br>
    <div style="font-family: monospace; background-color: white;">
      globals: &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; configurações
      globais <br>
      cameras: &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; especificação
      das câmaras/pontos de vista <br>
      lighting: &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; parâmetros globais de
      iluminação, e especificação de luzes <br>
      textures:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      identificação de texturas e respectivos ficheiros <br>
      appearances: &nbsp;&nbsp;&nbsp;&nbsp; especificação das
      características de materiais (pode incluir referência a texturas)
      <br>
      graph: &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; lista de
      nós do grafo; cada nó define transformações, aparência e a lista
      dos seus descendentes <br>
    </div>
    <br>
    Vários dos blocos anteriores contêm definições de entidades de
    diferentes tipos (várias luzes, várias aparências, etc...). Cada uma
    dessas entidades contém um identificador do tipo <em> string </em>
    . Cada identificador deve ser único dentro de cada bloco (por
    exemplo, não podem existir duas fontes de luz com o mesmo
    identificador). <br>
    <br>
    <div style="font-family: monospace;"> Na descrição abaixo, os
      símbolos utilizados têm o seguinte significado: <br>
      <br>
      &nbsp;&nbsp;&nbsp; ii: valor inteiro <br>
      &nbsp;&nbsp;&nbsp; ff: valor em vírgula-flutuante <br>
      &nbsp;&nbsp;&nbsp; ss: string <br>
      &nbsp;&nbsp;&nbsp; ee: caracter "x" ou "y" ou "z", especificando
      um eixo <br>
      &nbsp;&nbsp;&nbsp; tt: valor Booleano na forma "true" ou "false" </div>
    <br>
    <br>
    Segue-se uma listagem representativa da sintaxe pretendida. <br>
    <br>
    <div style="font-family: monospace; background-color: transparent;">
      <span style="color: rgb(51, 51, 255);"> &lt;!-- Os comentarios
        devem ter espacos no inicio e no fim, para --&gt; </span> <br style="color: rgb(51, 51, 255);">
      <span style="color: rgb(51, 51, 255);"> &lt;!--&nbsp;separar dos
        hifens --&gt; </span> <br style="color: rgb(51, 51, 255);">
      <span style="color: rgb(51, 51, 255);"> &lt;!--&nbsp;Nao devem ser
        usados caracteres especiais (p.ex. acentos) --&gt; </span> <br style="color: rgb(51, 51, 255);">
      <span style="color: rgb(51, 51, 255);"> &lt;!--&nbsp;Todas as tags
        e atributos sao obrigatorios, exceto onde for --&gt; </span> <br style="color: rgb(51, 51, 255);">
      <span style="color: rgb(51, 51, 255);"> &lt;!--&nbsp;referido o
        contrario --&gt; </span> <br>
      <br>
      &lt;yaf&gt; <br>
      <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp; &lt;!--
        bloco de </span> <span style="color: rgb(51, 51, 255);"> </span>
      <span style="color: rgb(51, 51, 255);"> configuracoes </span> <span style="color: rgb(51, 51, 255);"> globais --&gt; </span> <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp; &nbsp; <span style="color: red;"> </span> </span> <span style="color:
        rgb(51, 51, 255);"> &lt;!-- a declaracao dos atributos deste
        bloco e' obrigatoria --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);">
        &lt;!-- Valores para draw </span> <span style="color: rgb(51,
        51, 255);"> </span> <span style="color: rgb(51, 51, 255);">
        mode: "fill" </span> <span style="color: rgb(51, 51, 255);"> </span>
      <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> , "line", "point" </span> <span style="color: rgb(51, 51, 255);"> --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);">
        &lt;!-- Valores para </span> <span style="color: rgb(51, 51,
        255);"> </span> <span style="color: rgb(51, 51, 255);">
        shading: "flat", "gouraud" </span> <span style="color: rgb(51,
        51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> )
      </span> <span style="color: rgb(51, 51, 255);"> --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);"> <span style="color: rgb(51, 51, 255);"> &lt;!-- </span> <span style="color: rgb(51, 51, 255);"> Valores para </span> <span style="color: rgb(51, 51, 255);"> cullface: "none", "back" </span>
        <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> , "front" ou "both" --&gt; <br>
          &nbsp;&nbsp;&nbsp; </span> &lt;!-- </span> <span style="color: rgb(51, 51, 255);"> Valores para cullorder </span>
      <span style="color: rgb(51, 51, 255);"> : "CCW" </span> <span style="color: rgb(51, 51, 255);"> ou "CW" --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; &lt;globals background="ff ff ff ff"
      drawmode="ss" shading="ss" cullface="ss" cullorder="ss" /&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);">
        <br>
        &nbsp;&nbsp;&nbsp; &lt;!-- </span> <span style="color: rgb(51,
        51, 255);"> bloco de </span> <span style="color: rgb(51, 51,
        255);"> camaras: o atributo "initial" identifica a camara/ponto
        de vista inicial --&gt; </span> <br>
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &lt;cameras initial="ss" &gt; <br>
      <span style="background-color: white; color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;!-- tem de existir,
        pelo menos uma camara dos tipos seguintes (perspective ou ortho)
        --&gt; <br>
      </span> <span style="background-color: white; color: rgb(51, 51,
        255);"> </span> <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;perspective id="ss"
      near="ff" far="ff" angle="ff" pos="ff ff ff" target="ff ff ff"
      /&gt; <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;ortho id="ss" near="ff"
      far="ff" left="ff" right="ff" top="ff" bottom="ff" /&gt; <br>
      <br>
      &nbsp;&nbsp;&nbsp; &lt;/cameras&gt; <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp; <br>
        <br>
      </span> <span style="background-color: white; color: rgb(51, 51,
        255);"> </span> <span style="background-color: white; color:
        rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51,
        255);"> &nbsp;&nbsp;&nbsp; &lt;!-- </span> <span style="color:
        rgb(51, 51, 255);"> bloco de </span> <span style="color:
        rgb(51, 51, 255);"> iluminacao; segue os parametros do OpenGL
        --&gt; </span> <br>
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &lt;lighting doublesided="tt" local="tt"
      enabled="tt" ambient="ff ff ff ff" &gt; <br>
      &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <span style="color: rgb(51, 51,
        255);"> &nbsp; &nbsp;&nbsp; &lt;!-- Deve existir pelo menos um
        dos seguintes blocos: omin ou spot --&gt; </span> <br style="color: rgb(51, 51, 255);">
      <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> &nbsp; &nbsp;&nbsp;
        &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;!-- Os identificadores "id"
        nao podem ser repetidos --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;omni
      id="ss" enabled="tt" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; location="ff ff ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
      &nbsp;&nbsp; ambient="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; diffuse="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      specular="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      /&gt; <br>
      <span style="color: rgb(51, 51, 255);"> </span> <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &lt;spot <span style="color: rgb(51, 51, 255);"> </span> id="ss" enabled="tt"
      <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; location="ff ff ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
      &nbsp;&nbsp; ambient="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; diffuse="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      specular="ff ff ff ff"<br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; angle="ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; exponent="ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; direction="ff ff ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /&gt; <br>
      <br>
      &nbsp;&nbsp;&nbsp; &lt;/lighting&gt; <br>
      <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp; &lt;!--
        bloco de texturas. Este bloco tem de existir mas pode estar
        vazio, se nao forem usadas texturas --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp; &lt;textures&gt;&nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; <br>
      &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;texture id="ss"
      file="ss" /&gt; <br>
      &nbsp;&nbsp;&nbsp; &lt;/textures&gt; <br>
      <span style="color: rgb(51, 51, 255);"> <br>
        &nbsp;&nbsp;&nbsp; &lt;!-- bloco de materiais; --&gt; </span> <br>
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &lt;appearances&gt; <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; &lt;!-- </span> <span style="color: rgb(51,
        51, 255);"> deve existir um ou mais blocos "appearance" </span>
      <span style="color: rgb(51, 51, 255);"> --&gt;<br>
      </span><span style="color: rgb(51, 51, 255);">&nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; &lt;!-- IMPORTANTE: --&gt;<br>
        &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;
        textureref, texlength_s e textlength_t sao atributos --&gt;<br>
        &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;
        opcionais se for usada uma textura.</span><span style="color:
        rgb(51, 51, 255);"> --&gt; <br>
        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &lt;!--&nbsp;&nbsp; </span>
      <span style="color: rgb(51, 51, 255);"> <span style="color:
          rgb(51, 51, 255);"> ver topico 'Notas finais' no enunciado
          sobre os --&gt;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;
          parametros texlength_...) </span> --&gt;&nbsp; </span> <span style="color: rgb(51, 51, 255);"></span><br>
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;appearance id="ss" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      emissive="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      ambient="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      diffuse="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      specular="ff ff ff ff" <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      shininess="ff" <span style="color: rgb(51, 51, 255);"> </span><br>
      &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      textureref="ss" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      texlength_s="ff" <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      texlength_t="ff" <span style="color: rgb(51, 51, 255);"></span>/&gt;






      <br>
      &nbsp;&nbsp;&nbsp; &lt;/appearances&gt; <br style="background-color: rgb(255, 255, 102);">
      <span style="background-color: rgb(255, 255, 102);"> </span> <br>
      &nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);">
        &lt;!-- bloco do grafo; "rootid" </span> <span style="color:
        rgb(51, 51, 255);"> identifica o no de raiz --&gt; </span> <br>
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &lt;graph rootid="ss"&gt; <br>
      <br>
      <span style="background-color: white; color: rgb(51, 51, 255);">
        &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &lt;!-- tem de existir, pelo
        menos, um bloco "node" --&gt; </span> <br style="background-color: white; color: rgb(51, 51, 255);">
      <span style="background-color: white; color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;node id="ss"&gt; <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: rgb(51, 51, 255);"> &lt;!-- bloco "transforms"
        obrigatorio --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt;transforms&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp; <span style="color: rgb(51, 51, 255);">&lt;!-- deve
        conter </span> <span style="color: rgb(51, 51, 255);">
        transformacoes explicitas usando as instrucoes seguintes sem
        limite nem ordem --&gt; </span> <br style="color: rgb(51, 51,
        255);">
      <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






        &lt;!-- ex: bloco transforms pode ficar sem conteudo --&gt; <br>
      </span> <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






        &lt;!-- ex: bloco transforms pode ser&nbsp;R,T (nao tem S)
        --&gt; <br>
      </span> <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






        &lt;!-- ex: bloco transforms pode ser R,S,T,S --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






      &lt;translate to="ff ff ff" /&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






      &lt;rotate axis="ee" angle="ff" /&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






      &lt;scale factor="ff ff ff" /&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt;/transforms&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
      <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;!-- declaracao da aparencia a utilizar (pode ser omitida):
        --&gt; </span> <span style="color: rgb(51, 51, 255);"> <br>
        &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;!--
        a) se declarada sobrepoe-se 'a aparencia do "pai" --&gt; </span>
      <br>
      <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        &lt;!-- b) </span> <span style="color: rgb(51, 51, 255);"> <span style="color: rgb(51, 51, 255);"> se omitida, o no' </span> <span style="color: rgb(51, 51, 255);"> mantem (herda) a aparencia </span>
      </span> <span style="color: rgb(51, 51, 255);"> do "pai" --&gt; <br>
      </span> <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);"> <br>
      </span> <span style="color: rgb(51, 51, 255);"> </span>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt;appearanceref id="ss" /&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;





      <br>
      <span style="color: rgb(51, 51, 255);"> </span> <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp; &lt;!--
        bloco "children" obrigatorio --&gt; </span> <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt;children&gt; <br>
      <br>
      <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






        &lt;!-- deve existir no minimo uma primitiva, ou uma referencia
        a outros nos </span> <span style="color: rgb(51, 51, 255);">
        --&gt; </span> <br>
      <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;






        &lt;!-- podem existir varias primitivas e/ou referencias a
        outros nos </span> <span style="color: rgb(51, 51, 255);">
        --&gt; </span> <br>
      <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
        &lt;!--&nbsp;Primitivas : rectangle, triangle, cylinder, sphere,
        torus --&gt; <br>
        &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
        &lt;!-- &nbsp; Comandos a serem interpretados genericamente como
        em OpenGL/GLUT, exceto --&gt; <br>
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;!--
        &nbsp; o cilindro, que deve adicionalmente ter topos ou tampas)
        --&gt; </span> <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
      </span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
      &nbsp;&nbsp;&nbsp; &lt;rectangle xy1="ff ff" xy2="ff ff" /&gt; <br>
      &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
      &lt;triangle xyz1="ff ff ff" xyz2="ff ff ff" xyz3="ff ff ff" /&gt;
      <br>
      &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
      &lt;cylinder base="ff" top="ff" height="ff" slices="ii"
      stacks="ii" /&gt; <span style="color: rgb(51, 51, 255);">
        &nbsp;&nbsp;&nbsp; &nbsp;&lt;!-- deve ter topos --&gt; </span>
      <br>
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
      &lt;sphere radius="ff" slices="ii" stacks="ii" /&gt; <br>
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;
      &lt;torus inner="ff" outer="ff" slices="ii" loops="ii" /&gt; <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
        &lt;!-- Referencia a outros elementos do grafo --&gt; <br>
        &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; &lt;!-- (repetir o nº de vezes necessario)
        --&gt; </span> <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp;&nbsp;&nbsp;
        &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;!--
        LEMBRANDO: qualquer no' pode ser referenciado previamente 'a sua
        declaracao; isto --&gt; </span> <br>
      <span style="color: rgb(51, 51, 255);"> &nbsp; &nbsp; &nbsp;
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- &nbsp; &nbsp; &nbsp;
        &nbsp; &nbsp;&nbsp; é, a ordem pela qual os nós são declarados é
        irrelevante --&gt; </span> <br>
      <br>
      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
      &nbsp;&nbsp;&nbsp; &lt;noderef id="ss" /&gt; <br>
      <br>
      <span style="color: rgb(51, 51, 255); background-color: rgb(255,
        255, 102);"> </span>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt;/children&gt; <br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/node&gt; <br>
      &nbsp;&nbsp;&nbsp; &lt;/graph&gt; <br>
      &lt;/yaf&gt; <br>
      <br>
      <br>
      <br>
      <br>
    </div>
    <hr style="width: 100%; height: 2px;">
    <p style="font-weight: bold;"> Notas finais: </p>
    <p> Texturas: de forma a manter as texturas numa escala adequada, o
      mapeamento de coordenadas de vértices de polígonos (retângulo,
      triângulo ou outros, mas não em quádricas) sobre o sistema
      referencial das texturas deve respeitar a escala definida na
      textura. Por exemplo, se <span style="font-family: monospace;
        background-color: transparent;"> texlength_s=3 </span> ,
      significa que uma ocorrência da textura, em comprimento, deve
      cobrir com exatidão um polígono de comprimento 3 unidades; mas se
      <span style="font-family: monospace; background-color:
        transparent;"> texlength_t=0.4 </span> , então deve cobrir um
      comprimento de 0.4 unidades. Aceita-se que posteriores utilizações
      de escalamentos sobre os objetos respetivos venham a invalidar
      esta regra. <br>
    </p>
    <p><br>
      <small><small>rev.2013.09.16b</small></small><br>
    </p>
  

</body></html>